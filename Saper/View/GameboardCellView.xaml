<UserControl x:Class="Saper.View.GameboardCellView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Saper.View"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             mc:Ignorable="d" 
             d:DesignHeight="100" d:DesignWidth="100">

    <Viewbox Stretch="Uniform" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
        <Grid Height="100" Width="100">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <!-- This border is active after flipping Cell-->
            <Border Width="100" Height="100">
                <Grid>
                    <Label Content="{Binding Value}" d:Content="1"
                           FontSize="70"
                           HorizontalContentAlignment="Center"
                           VerticalAlignment="Center"
                           BorderBrush="{Binding BorderBrush}" d:BorderBrush="#00FF00"
                           BorderThickness="1">         

                        <Label.Style>
                            <Style TargetType="Label">
                                <Setter Property="Foreground">
                                    <Setter.Value>
                                        <Binding Path="FontBrush" FallbackValue="#00ff00" />
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding HasCounter}" Value="false">
                                        <Setter Property="Foreground" Value="Transparent"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Label.Style>
                    </Label>

                    <!-- Mine Image -->
                    <Grid Background="{Binding FontBrush}" IsHitTestVisible="False">
                        <Grid.OpacityMask>
                            <ImageBrush ImageSource="/Resource/mine.png" Stretch="Fill"/>
                        </Grid.OpacityMask>

                        <Grid.Style>
                            <Style TargetType="Grid">
                                <Setter Property="Visibility" Value="Hidden"/>
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsFlipped}" Value="true" />
                                            <Condition Binding="{Binding HasMine}" Value="true" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Visibility" Value="Visible" />
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                    </Grid>
                </Grid>
            </Border>

            <!-- Button, Main interactive part -->
            <Button Content=""
                    VerticalAlignment="Stretch"
                    HorizontalAlignment="Stretch"
                    FontSize="70"
                    Command="{Binding FlipCommand}"
                    Background="{Binding UnflippedBrush}">

                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="PreviewMouseRightButtonDown">
                        <i:InvokeCommandAction Command="{Binding FlagCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Visibility" Value="Visible"/>
                        <Setter Property="Background" Value="Wheat"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{Binding BorderBrush}" BorderThickness="1">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="border" Property="Background" Value="{Binding MouseOverUnflippedBrush}"/>
                                        </Trigger>
                                        <DataTrigger Binding="{Binding IsFlipped}" Value="true">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Button.Style>
            </Button>

            <!-- Flag Image -->
            <Grid Background="{Binding FontBrush}" IsHitTestVisible="False">
                <Grid.OpacityMask>
                    <ImageBrush ImageSource="/Resource/flag.png" Stretch="Fill"/>
                </Grid.OpacityMask>

                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="Visibility" Value="Hidden"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsFlagged}" Value="true" >
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
            </Grid>
        </Grid>
    </Viewbox>
    
</UserControl>
